commit b4de6b9e21e31fcbab28359c0fa09552fb05099a
Author: CreatorSimon <obisiknobi@t-online.de>
Date:   Mon Aug 2 14:53:37 2021 +0200

    .

diff --git a/Streamtitles/Assets/LockScreenLogo.scale-200.png b/Streamtitles/Assets/LockScreenLogo.scale-200.png
index 735f57a..86ff5ff 100644
Binary files a/Streamtitles/Assets/LockScreenLogo.scale-200.png and b/Streamtitles/Assets/LockScreenLogo.scale-200.png differ
diff --git a/Streamtitles/Assets/SplashScreen.scale-200.png b/Streamtitles/Assets/SplashScreen.scale-200.png
index 023e7f1..43fd8c8 100644
Binary files a/Streamtitles/Assets/SplashScreen.scale-200.png and b/Streamtitles/Assets/SplashScreen.scale-200.png differ
diff --git a/Streamtitles/Assets/Square150x150Logo.scale-200.png b/Streamtitles/Assets/Square150x150Logo.scale-200.png
index af49fec..7a64c42 100644
Binary files a/Streamtitles/Assets/Square150x150Logo.scale-200.png and b/Streamtitles/Assets/Square150x150Logo.scale-200.png differ
diff --git a/Streamtitles/Assets/Square44x44Logo.scale-200.png b/Streamtitles/Assets/Square44x44Logo.scale-200.png
index ce342a2..7938faf 100644
Binary files a/Streamtitles/Assets/Square44x44Logo.scale-200.png and b/Streamtitles/Assets/Square44x44Logo.scale-200.png differ
diff --git a/Streamtitles/Assets/Square44x44Logo.targetsize-24_altform-unplated.png b/Streamtitles/Assets/Square44x44Logo.targetsize-24_altform-unplated.png
index f6c02ce..207222f 100644
Binary files a/Streamtitles/Assets/Square44x44Logo.targetsize-24_altform-unplated.png and b/Streamtitles/Assets/Square44x44Logo.targetsize-24_altform-unplated.png differ
diff --git a/Streamtitles/Assets/StoreLogo.png b/Streamtitles/Assets/StoreLogo.png
index 7385b56..d6c0a4d 100644
Binary files a/Streamtitles/Assets/StoreLogo.png and b/Streamtitles/Assets/StoreLogo.png differ
diff --git a/Streamtitles/Assets/Wide310x150Logo.scale-200.png b/Streamtitles/Assets/Wide310x150Logo.scale-200.png
index 288995b..eb26457 100644
Binary files a/Streamtitles/Assets/Wide310x150Logo.scale-200.png and b/Streamtitles/Assets/Wide310x150Logo.scale-200.png differ
diff --git a/Streamtitles/Data.cs b/Streamtitles/Data.cs
index 45172d4..6bd5ffb 100644
--- a/Streamtitles/Data.cs
+++ b/Streamtitles/Data.cs
@@ -1,21 +1,11 @@
 ï»¿using MySql.Data.MySqlClient;
-using Newtonsoft.Json;
 using System;
 using System.Collections.Generic;
 using System.ComponentModel;
-using System.Diagnostics;
-using System.IO;
-using System.Linq;
-using System.Net;
-using System.Net.Http;
-using System.Text;
-using System.Threading;
-using System.Threading.Tasks;
 using TwitchLib.Api;
 using TwitchLib.Api.Core.Enums;
-using TwitchLib.Api.Helix.Models.Channels.GetChannelInformation;
 using TwitchLib.Api.Helix.Models.Channels.ModifyChannelInformation;
-using TwitchLib.Api.Helix.Models.Users.GetUsers;
+using Windows.Storage;
 
 namespace Streamtitles
 {
@@ -25,8 +15,8 @@ namespace Streamtitles
         private static MainPage _mainPage = new MainPage();
         public static MySqlConnection mysqlcon;
 
-        private static string _title = "Test";
-        private static string _channel = "dunkingsimon";
+        private static string _title;
+        private static string _channel;
         private static TwitchAPI api = new TwitchAPI();
 
         public static string _ip;
@@ -34,6 +24,12 @@ namespace Streamtitles
         public static string _user;
         public static string _password;
 
+        public static string _clientid;
+        public static string _secret;
+        public static string _token;
+
+        private static ApplicationDataContainer localSettings = Windows.Storage.ApplicationData.Current.LocalSettings;
+
         private static BackgroundWorker background = new BackgroundWorker();
 
         public static string Ip
@@ -66,23 +62,44 @@ namespace Streamtitles
             set { _channel = value; }
         }
 
+        public static string ClientID
+        {
+            get { return _clientid; }
+            set { _clientid = value; }
+        }
+
+        public static string Secret
+        {
+            get { return _secret; }
+            set { _secret = value; }
+        }
+
+        public static string Token
+        {
+            get { return _token; }
+            set { _token = value; }
+        }
+      
+
+        public object TwitchApiAddress { get; private set; }
+
         public static void Generate_ConnectionString()
         {
-            _conStr = $"server = {_ip}; port = {_port}; user = {_user}; pwd = {_password}; database = streamtitles;";
+            _conStr = $"server = {Ip}; port = {Port}; user = {User}; pwd = {Password}; database = streamtitles;";
         }
 
         public static void Change_Twitch_Title(string title)
         {
             _title = title;
-            api.Helix.Settings.ClientId = SecretData.ClientID;
-            api.Helix.Settings.Secret = SecretData.Secret;
-            api.Helix.Settings.AccessToken = SecretData.Token;
+            api.Helix.Settings.ClientId = ClientID;
+            api.Helix.Settings.Secret = Secret;
+            api.Helix.Settings.AccessToken = Token;
 
             api.Helix.Settings.Scopes = new List<AuthScopes>() { AuthScopes.Any, AuthScopes.Helix_Channel_Manage_Broadcast };
             BackgroundWorker d = new BackgroundWorker();
             d.DoWork += async (a, s) =>
             {
-                var user = await api.Helix.Users.GetUsersAsync(logins: new List<string>() { _channel });
+                var user = await api.Helix.Users.GetUsersAsync(logins: new List<string>() { Channel });
 
                 var t = new ModifyChannelInformationRequest();
                 t.Title = _title;
@@ -94,6 +111,33 @@ namespace Streamtitles
             d.RunWorkerAsync();
         }
 
+        public static Boolean CheckTwitchConnection()
+        {
+            try
+            {
+                api.Helix.Settings.ClientId = ClientID;
+                api.Helix.Settings.Secret = Secret;
+                api.Helix.Settings.AccessToken = Token;
+
+                api.Helix.Settings.Scopes = new List<AuthScopes>() { AuthScopes.Any, AuthScopes.Helix_Channel_Manage_Broadcast };
+                BackgroundWorker d = new BackgroundWorker();
+                d.DoWork += async (a, s) =>
+                {
+                    var user = await api.Helix.Users.GetUsersAsync(logins: new List<string>() { Channel });
+                    var subscription =
+                        await api.Helix.Channels.GetChannelInformationAsync(user.Users[0].Id);
+                };
+
+                d.RunWorkerAsync();
+
+            }
+            catch (Exception e) when (e is TwitchLib.Api.Core.Exceptions.InvalidCredentialException || e is TwitchLib.Api.Core.Exceptions.BadRequestException)
+            {
+                return false;
+            }
+            return true;
+        }
+
         public static Boolean Connect_sql()
         {
             mysqlcon = new MySqlConnection(_conStr);
@@ -115,146 +159,33 @@ namespace Streamtitles
             return _conStr;
         }
 
-        //public async Task<OAuthObject> GetAuthToken(bool isBroadcaster)
-        //{
-        //    //Source from: https:github.com/googlesamples/oauth-apps-for-windows/blob/master/OAuthDesktopApp/OAuthDesktopApp/MainWindow.xaml.cs
-        //    //Creates an HttpListener to listen for requests on that redirect URI.
-
-        //    var httpListener = new HttpListener();
-        //    httpListener.Prefixes.Add("http://127.0.0.1:1234/");
-
-        //    httpListener.Start();
-
-        //    //Creates the OAuth 2.0 authorization request.
-        //    var state = RandomDataBase64Url(32);
-        //    var authorizationRequest = "";
-        //    if (isBroadcaster)
-        //    {
-        //        authorizationRequest = $"{TwitchApiAddress}{AuthorizationEndpoint}?client_id={TwitchClientID}&redirect_uri={Uri.EscapeDataString(RedirectUri)}&response_type=code&{TwitchScopesChannelOwner}&force_verify=true&state={state}";
-        //    }
-        //    else
-        //    {
-        //        authorizationRequest = $"{TwitchApiAddress}{AuthorizationEndpoint}?client_id={TwitchClientID}&redirect_uri={Uri.EscapeDataString(RedirectUri)}&response_type=code&{TwitchScopesBot}&force_verify=true&state={state}";
-        //    }
-
-        //    //Opens request in the browser.
-        //    Process.Start(authorizationRequest);
-
-        //    //Waits for the OAuth authorization response.
-
-        //    var context = await httpListener.GetContextAsync();
-
-        //    //Brings this app back to the foreground.
-        //    //Activate();
-
-        //    //Sends an HTTP response to the browser.
-        //    const string responseString = "<html><head><meta http-equiv='refresh' content='10;url=https:www.nanotwitchleafs.com/'></head><body>Please return to the app.</body></html>";
-        //    var buffer = Encoding.UTF8.GetBytes(responseString);
-
-        //    var response = context.Response;
-        //    response.ContentLength64 = buffer.Length;
-        //    var responseOutput = response.OutputStream;
-        //    await responseOutput.WriteAsync(buffer, 0, buffer.Length).ContinueWith(task =>
-        //    {
-        //        responseOutput.Close();
-        //        httpListener.Stop();
-        //    });
-
-        //    //Checks for errors.
-        //    if (context.Request.QueryString.Get("error") != null)
-        //    {
-        //        _logger.Error($"OAuth authorization error: {context.Request.QueryString.Get("error")}.");
-        //        return null;
-        //    }
-
-        //    if (context.Request.QueryString.Get("code") == null || context.Request.QueryString.Get("state") == null)
-        //    {
-        //        _logger.Error("Malformed authorization response. " + context.Request.QueryString);
-        //        return null;
-        //    }
-
-        //    //extracts the code
-        //    string code = context.Request.QueryString.Get("code");
-        //    string incomingState = context.Request.QueryString.Get("state");
-
-        //    //compares the receieved state to the expected value, to ensure that this app made the request which resulted in authorization.
-        //    if (incomingState != state)
-        //    {
-        //        _logger.Error($"Received request with invalid state ({incomingState})");
-        //        return null;
-        //    }
-
-        //    _logger.Debug("Authorization code: " + code);
-
-        //    return await PerformCodeExchange(code);
-        //}
-
-        //private async Task<OAuthObject> PerformCodeExchange(string code, bool isRefresh = false)
-        //{
-        //    _logger.Info("Exchanging code for tokens...");
-        //    string tokenRequestBody = "";
-
-        //    if (!isRefresh)
-        //    {
-        //        //builds the  request
-        //        tokenRequestBody = $"code={code}&redirect_uri={Uri.EscapeDataString(RedirectUri)}&client_id={TwitchClientID}&client_secret={TwitchClientSecret}&grant_type=authorization_code";
-        //    }
-        //    else
-        //    {
-        //        //builds the  request
-        //        tokenRequestBody = $"refresh_token={code}&client_id={TwitchClientID}&client_secret={TwitchClientSecret}&grant_type=refresh_token";
-        //    }
-
-        //    //sends the request
-        //    var tokenRequest = (HttpWebRequest)WebRequest.Create($"{TwitchApiAddress}{TokenEndpoint}");
-        //    tokenRequest.Method = "POST";
-        //    tokenRequest.ContentType = "application/x-www-form-urlencoded";
-        //    tokenRequest.Accept = "Accept=text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";
-        //    tokenRequest.ProtocolVersion = HttpVersion.Version10;
-
-        //    var byteVersion = Encoding.ASCII.GetBytes(tokenRequestBody);
-        //    tokenRequest.ContentLength = byteVersion.Length;
-        //    var stream = tokenRequest.GetRequestStream();
-        //    await stream.WriteAsync(byteVersion, 0, byteVersion.Length);
-        //    stream.Close();
-
-        //    try
-        //    {
-        //        //gets the response
-        //        var tokenResponse = await tokenRequest.GetResponseAsync();
-        //        using (var reader = new StreamReader(tokenResponse.GetResponseStream()))
-        //        {
-        //            //reads response body
-        //            string responseText = await reader.ReadToEndAsync();
-        //            _logger.Debug("Response: " + responseText);
-
-        //            responseText = responseText.Remove(136) + "}";
-
-        //            //converts to dictionary
-        //            dynamic tokenEndpointDecoded = JsonConvert.DeserializeObject(responseText);
-
-        //            return new OAuthObject { Access_Token = tokenEndpointDecoded["access_token"], Refresh_Token = tokenEndpointDecoded["refresh_token"], Expires_In = tokenEndpointDecoded["expires_in"] };
-        //        }
-        //    }
-        //    catch (WebException ex)
-        //    {
-        //        if (ex.Status == WebExceptionStatus.ProtocolError)
-        //        {
-        //            if (ex.Response is HttpWebResponse response)
-        //            {
-        //                _logger.Debug("HTTP: " + response.StatusCode);
-        //                using (var reader = new StreamReader(response.GetResponseStream()))
-        //                {
-        //                    //reads response body
-        //                    string responseText = await reader.ReadToEndAsync();
-        //                    _logger.Debug("Response: " + responseText);
-        //                }
-        //            }
-        //        }
-        //    }
-
-        //    return null;
-        //}
+        public static void Save_Settings()
+        {
+            localSettings.Values["database ip"] = Ip;
+            localSettings.Values["database port"] = Port;
+            localSettings.Values["database user"] = User;
+            localSettings.Values["database pwd"] = Password;
+
+            localSettings.Values["api clientid"] = ClientID;
+            localSettings.Values["api secret"] = Secret;
+            localSettings.Values["api token"] = Token;
+
+            localSettings.Values["channel"] = Channel;
+        }
+
+        public static void Load_Settings()
+        {
+            Ip = localSettings.Values["database ip"] as string;
+            Port = localSettings.Values["database port"] as string;
+            User = localSettings.Values["database user"] as string;
+            Password = localSettings.Values["database pwd"] as string;
+
+            ClientID = localSettings.Values["api clientid"] as string;
+            Secret = localSettings.Values["api secret"] as string;
+            Token = localSettings.Values["api token"] as string;
+
+            Channel = localSettings.Values["channel"] as string;
+        }
 
     }
 }
diff --git a/Streamtitles/DataGridPage.xaml b/Streamtitles/DataGridPage.xaml
new file mode 100644
index 0000000..d3bca81
--- /dev/null
+++ b/Streamtitles/DataGridPage.xaml
@@ -0,0 +1,93 @@
+ï»¿<Page 
+      x:Class="Streamtitles.DataGridPage"
+      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
+      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
+      xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
+      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
+      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
+      mc:Ignorable="d">
+    <Page.Background>
+        <ImageBrush ImageSource="/Assets/twitch.jpg" Opacity="0.5"/>
+    </Page.Background>
+
+    <Grid>
+    <Grid.Resources>
+      <DataTemplate x:Key="RowDetailsTemplate">
+        <StackPanel>
+          <TextBlock Margin="20" Text="Here are the details for the selected mountain:" />
+          <Grid Margin="20,10" Padding="5">
+            <Grid.RowDefinitions>
+              <RowDefinition Height="Auto" />
+              <RowDefinition Height="Auto" />
+              <RowDefinition Height="Auto" />
+              <RowDefinition Height="*" />
+            </Grid.RowDefinitions>
+            <Grid.ColumnDefinitions>
+              <ColumnDefinition Width="Auto" />
+              <ColumnDefinition Width="Auto" />
+            </Grid.ColumnDefinitions>
+            <TextBlock Text="Coordinates: " FontWeight="SemiBold" FontSize="13" />
+            <TextBlock Grid.Row="1" Text="Prominence (m): " FontWeight="SemiBold" FontSize="13" />
+            <TextBlock Grid.Row="2" Text="First Ascent (year): " FontWeight="SemiBold" FontSize="13" />
+            <TextBlock Grid.Row="3" Text="No. of ascents: " FontWeight="SemiBold" FontSize="13" />
+            <TextBlock Grid.Column="1" FontSize="13" Text="{Binding Coordinates}" HorizontalAlignment="Right" />
+            <TextBlock Grid.Row="1" Grid.Column="1" FontSize="13" Text="{Binding Prominence}" HorizontalAlignment="Right" />
+            <TextBlock Grid.Row="2" Grid.Column="1" FontSize="13" Text="{Binding First_ascent}" HorizontalAlignment="Right" />
+            <TextBlock Grid.Row="3" Grid.Column="1" FontSize="13" Text="{Binding Ascents}" HorizontalAlignment="Right" />
+          </Grid>
+        </StackPanel>
+      </DataTemplate>
+    </Grid.Resources>
+    <Grid.RowDefinitions>
+      <RowDefinition Height="Auto" />
+      <RowDefinition Height="*" />
+    </Grid.RowDefinitions>
+    <StackPanel Orientation="Horizontal" Margin="12">
+      <TextBlock Text="Database Entries" VerticalAlignment="Center" Margin="5,0" Style="{ThemeResource SubtitleTextBlockStyle}"/>
+      <AppBarButton Icon="Filter" Label="Filter by">
+        <AppBarButton.Flyout>
+          <MenuFlyout>
+            <MenuFlyoutItem x:Name="sortCategory" Text="Category" Click="sortCategory_Click"/>
+            <MenuFlyoutItem x:Name="sortGenre" Text="Genre" Click="sortGenre_Click"/>
+            <MenuFlyoutSeparator />
+            <MenuFlyoutItem x:Name="clearFilter" Text="Remove Filter" />
+          </MenuFlyout>
+        </AppBarButton.Flyout>
+      </AppBarButton>
+      <AppBarButton x:Name="groupButton" Icon="List" Label="Group by" />
+    </StackPanel>
+    <controls:DataGrid
+      Grid.Row="1"
+        x:Name="DataGrid"
+        Margin="12"
+        ItemsSource="{x:Bind DataList}"
+        VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
+        HorizontalScrollBarVisibility="Visible"
+        VerticalScrollBarVisibility="Visible"
+        AlternatingRowBackground="Transparent"
+        AlternatingRowForeground="Gray"
+        AreRowDetailsFrozen="False"
+        AreRowGroupHeadersFrozen="False"
+        AutoGenerateColumns="False"
+        CanUserSortColumns="False"
+        CanUserReorderColumns="True"
+        CanUserResizeColumns="True"
+        ColumnHeaderHeight="32"
+        MaxColumnWidth="400"
+        FrozenColumnCount="0"
+        GridLinesVisibility="None"
+        HeadersVisibility="Column"
+        IsReadOnly="True"
+        RowDetailsTemplate="{StaticResource RowDetailsTemplate}"
+        RowDetailsVisibilityMode="Collapsed"
+        SelectionMode="Single"
+        RowGroupHeaderPropertyNameAlternative="Range">
+      <controls:DataGrid.Columns>
+        <controls:DataGridTextColumn Header="IDTitle" Binding="{Binding IDTitle}" />
+        <controls:DataGridComboBoxColumn Header="Title" Binding="{Binding Title}" />
+        <controls:DataGridTextColumn Header="Genre" Binding="{Binding Genre}" />
+        <controls:DataGridTextColumn Header="Category" Tag="Category"  Binding="{Binding Category}" />
+      </controls:DataGrid.Columns>
+    </controls:DataGrid>
+  </Grid>
+</Page>
\ No newline at end of file
diff --git a/Streamtitles/DataGridPage.xaml.cs b/Streamtitles/DataGridPage.xaml.cs
new file mode 100644
index 0000000..984e788
--- /dev/null
+++ b/Streamtitles/DataGridPage.xaml.cs
@@ -0,0 +1,94 @@
+ï»¿using MySql.Data.MySqlClient;
+using System;
+using System.Collections.Generic;
+using System.Collections.ObjectModel;
+using System.Data.Common;
+using System.Diagnostics;
+using System.IO;
+using System.Linq;
+using System.Runtime.InteropServices.WindowsRuntime;
+using Windows.Foundation;
+using Windows.Foundation.Collections;
+using Windows.UI.Xaml;
+using Windows.UI.Xaml.Controls;
+using Windows.UI.Xaml.Controls.Primitives;
+using Windows.UI.Xaml.Data;
+using Windows.UI.Xaml.Input;
+using Windows.UI.Xaml.Media;
+using Windows.UI.Xaml.Navigation;
+
+// The Blank Page item template is documented at https://go.microsoft.com/fwlink/?LinkId=234238
+
+namespace Streamtitles
+{
+    /// <summary>
+    /// An empty page that can be used on its own or navigated to within a Frame.
+    /// </summary>
+    
+
+    public class DatabaseListEntry
+    {
+        public int IDTitle { get; set; }
+        public string Title { get; set; }
+        public string Genre { get; set; }
+        public string Category { get; set; }
+
+    }
+
+
+
+    public sealed partial class DataGridPage : Page
+    {
+
+        private MySqlCommand _GetTableTitle;
+        
+        public List<DatabaseListEntry> DataList { get; set; }
+
+        public DataGridPage()
+        {
+            this.InitializeComponent();
+
+            DataList = new List<DatabaseListEntry>();
+            GetData();
+        }
+
+        public async void GetData()
+        {
+            if (Data.mysqlcon != null)
+            {
+                Data.mysqlcon.Open();
+                _GetTableTitle = new MySqlCommand("SELECT titles.idtitle, titles.title, genres.genre, categories.category FROM titles, genres, categories WHERE(titles.idtitle = genres.idtitle and titles.idtitle = categories.idtitle);", Data.mysqlcon);
+                using (DbDataReader res = await _GetTableTitle.ExecuteReaderAsync())
+                {
+                    while(await res.ReadAsync())
+                    {
+
+                        var entry = new DatabaseListEntry();
+                        entry.IDTitle = res.GetInt32(0);
+                        entry.Title = res.GetString(1);
+                        entry.Genre = res.GetString(2);
+                        entry.Category = res.GetString(3);
+
+                        DataList.Add(entry);
+                    }
+                }
+                Data.mysqlcon.Close();
+            }
+            else
+            {
+
+            }
+
+    }
+
+        private void sortCategory_Click(object sender, RoutedEventArgs e)
+        {
+            
+        }
+
+        private void sortGenre_Click(object sender, RoutedEventArgs e)
+        {
+
+        }
+    }
+}
diff --git a/Streamtitles/MainPage.xaml b/Streamtitles/MainPage.xaml
index 509742d..562f3a2 100644
--- a/Streamtitles/MainPage.xaml
+++ b/Streamtitles/MainPage.xaml
@@ -21,12 +21,10 @@
         <Grid.ColumnDefinitions>
             <ColumnDefinition Width="51*"/>
             <ColumnDefinition Width="49*"/>
-            <ColumnDefinition Width="49*"/>
         </Grid.ColumnDefinitions>
         <TextBlock Text="Your random Streamtitle generator!" FontSize="48" FontFamily="Arial Black" FontWeight="Bold" VerticalAlignment="Center" Height="58" Width="807" Grid.ColumnSpan="3" HorizontalAlignment="Center" Grid.Row="1"/>
         <TextBox  x:Name="StreamOut" TextAlignment="Center" Height="41" Text="" TextWrapping="Wrap" VerticalAlignment="Center" FontSize="24" FontFamily="Arial Black" FontWeight="Bold" TextChanged="StreamOut_TextChanged" Margin="347,0,347,0" Grid.Row="2" Grid.ColumnSpan="3" HorizontalAlignment="Stretch"/>
         <Button  x:Name="GenerateButton" Content="Generate" FontFamily="Arial Black" FontWeight="Bold" FontSize="36" Click="GenerateButton_Click" Grid.Row="3" Grid.Column="0" Height="57" Width="205" HorizontalAlignment="Center"/>
-        <Button  x:Name="SuggestButton" Content="Suggest" FontFamily="Arial Black" FontWeight="Bold" FontSize="36" Click="SuggestButton_Click" Grid.Row="3" Height="57" Width="201" RenderTransformOrigin="0.457,0.521" Grid.Column="2" HorizontalAlignment="Center"/>
         <Button x:Name="Set_Button" Content="Set Title" Grid.Row="3" Height="58" Click="SetButton_Click" FontFamily="Arial Black" FontSize="36" FontWeight="Bold" Width="205" Grid.Column="1" HorizontalAlignment="Center"/>
     </Grid>
 
diff --git a/Streamtitles/MainPage.xaml.cs b/Streamtitles/MainPage.xaml.cs
index 508ce75..00173af 100644
--- a/Streamtitles/MainPage.xaml.cs
+++ b/Streamtitles/MainPage.xaml.cs
@@ -1,31 +1,10 @@
-ï»¿using System;
-using System.Collections.Generic;
-using System.IO;
-using System.Linq;
-using System.Runtime.InteropServices.WindowsRuntime;
+ï»¿
 using Windows.Foundation;
-using Windows.Foundation.Collections;
 using Windows.UI.ViewManagement;
 using Windows.UI.Xaml;
 using Windows.UI.Xaml.Controls;
-using Windows.UI.Xaml.Controls.Primitives;
-using Windows.UI.Xaml.Data;
-using Windows.UI.Xaml.Input;
-using Windows.UI.Xaml.Media;
-using Windows.UI.Xaml.Navigation;
-using System.Diagnostics;
-using System.Data.SQLite;
-using System.Text;
-using System.Threading.Tasks;
 using MySql.Data.MySqlClient;
-using System.Data;
 using System.Data.Common;
-using Windows.ApplicationModel.DataTransfer;
-using TwitchLib.Api;
-using TwitchLib.Api.Helix.Models.Users;
-using TwitchLib.Api.Services.Events.LiveStreamMonitor;
-using TwitchLib.Api.Services;
-using System.Net.Http;
 
 // The Blank Page item template is documented at https://go.microsoft.com/fwlink/?LinkId=402352&clcid=0x409
 
@@ -41,13 +20,15 @@ namespace Streamtitles
 
     public sealed partial class MainPage : Page
     {
-        private MySqlCommand addToDatabase;
         private MySqlCommand readTitle;
 
         public MainPage()
         {
             this.InitializeComponent();
+
             ApplicationView.GetForCurrentView().SetPreferredMinSize(new Size(500, 500));
+
+            //CheckConnection();
         }
 
         private async void GenerateButton_Click(object sender, RoutedEventArgs e)
@@ -69,20 +50,23 @@ namespace Streamtitles
             }
         }
 
-        private void SuggestButton_Click(object sender, RoutedEventArgs e)
+        private void CheckConnection()
         {
-            if (Data.mysqlcon != null)
+            var twCon = Data.CheckTwitchConnection();
+            if(Data.mysqlcon != null && twCon)
             {
-                Data.mysqlcon.Open();
-                addToDatabase = new MySqlCommand("REPLACE INTO titles (title) VALUES (@title);", Data.mysqlcon);
-                addToDatabase.Parameters.AddWithValue("@title", StreamOut.Text);
-                addToDatabase.Prepare();
-                addToDatabase.ExecuteNonQueryAsync();
-                Data.mysqlcon.Close();
+                StreamOut.PlaceholderText = "Database and Twitch connection are working!" ;
+            }
+            else if(Data.mysqlcon != null && !twCon)
+            {
+                StreamOut.PlaceholderText = "Twitch connection not working!";
+            }else if(Data.mysqlcon == null && twCon)
+            {
+                StreamOut.PlaceholderText = "Database connection not working!";
             }
             else
             {
-                StreamOut.PlaceholderText = "No connection to database!";
+                StreamOut.PlaceholderText = "Database and Twitch connection not working!";
             }
         }
 
diff --git a/Streamtitles/NavigationPage.xaml b/Streamtitles/NavigationPage.xaml
index a09eab7..ed9d05d 100644
--- a/Streamtitles/NavigationPage.xaml
+++ b/Streamtitles/NavigationPage.xaml
@@ -13,6 +13,7 @@
             <muxc:NavigationView.MenuItems>
                 <muxc:NavigationViewItem x:Name="Home_Page" Icon="Home" Content="Home" />
                 <muxc:NavigationViewItem x:Name="Data_Page" Icon="List" Content="Database" />
+                <muxc:NavigationViewItem x:Name="Suggest_Page" Icon="List" Content="Save" />
             </muxc:NavigationView.MenuItems>
             <Frame x:Name="contentFrame"/>
         </muxc:NavigationView>
diff --git a/Streamtitles/NavigationPage.xaml.cs b/Streamtitles/NavigationPage.xaml.cs
index f1bbf27..049d27a 100644
--- a/Streamtitles/NavigationPage.xaml.cs
+++ b/Streamtitles/NavigationPage.xaml.cs
@@ -24,6 +24,9 @@ namespace Streamtitles
     {
         private MainPage _mainPage;
         private OptionsPage _optionsPage;
+        private SuggestPage _suggestPage;
+        private DataGridPage _dataPage;
+
         public NavigationPage()
         {
             this.InitializeComponent();
@@ -31,6 +34,9 @@ namespace Streamtitles
             NavBar.IsPaneOpen = false;
             _mainPage = new MainPage();
             _optionsPage = new OptionsPage();
+            _suggestPage = new SuggestPage();
+            _dataPage = new DataGridPage();
+            Data.Load_Settings();
         }
 
         private void NavBar_Click(NavigationView sender, NavigationViewItemInvokedEventArgs args)
@@ -43,6 +49,14 @@ namespace Streamtitles
             {
                 this.contentFrame.Navigate(typeof(MainPage));
             }
+            if (args.InvokedItemContainer == Suggest_Page)
+            {
+                this.contentFrame.Navigate(typeof(SuggestPage));
+            }
+            if (args.InvokedItemContainer == Data_Page)
+            {
+                this.contentFrame.Navigate(typeof(DataGridPage));
+            }
         }
     }
 }
diff --git a/Streamtitles/OptionsPage.xaml b/Streamtitles/OptionsPage.xaml
index 535f803..b2e8b09 100644
--- a/Streamtitles/OptionsPage.xaml
+++ b/Streamtitles/OptionsPage.xaml
@@ -6,6 +6,193 @@
     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:muxc="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
     mc:Ignorable="d" Background="#FF6441A5">
+    <Page.Resources>
+        <muxc:Style x:Key="PasswordBoxStyle1" TargetType="muxc:PasswordBox">
+            <muxc:Setter Property="Foreground" Value="{muxc:ThemeResource TextControlForeground}"/>
+            <muxc:Setter Property="Background" Value="{muxc:ThemeResource TextControlBackground}"/>
+            <muxc:Setter Property="SelectionHighlightColor" Value="{muxc:ThemeResource TextControlSelectionHighlightColor}"/>
+            <muxc:Setter Property="BorderBrush" Value="{muxc:ThemeResource TextControlBorderBrush}"/>
+            <muxc:Setter Property="BorderThickness" Value="{muxc:ThemeResource TextControlBorderThemeThickness}"/>
+            <muxc:Setter Property="FontFamily" Value="{muxc:ThemeResource ContentControlThemeFontFamily}"/>
+            <muxc:Setter Property="FontSize" Value="{muxc:ThemeResource ControlContentThemeFontSize}"/>
+            <muxc:Setter Property="muxc:ScrollViewer.HorizontalScrollMode" Value="Auto"/>
+            <muxc:Setter Property="muxc:ScrollViewer.VerticalScrollMode" Value="Auto"/>
+            <muxc:Setter Property="muxc:ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
+            <muxc:Setter Property="muxc:ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
+            <muxc:Setter Property="Padding" Value="{muxc:ThemeResource TextControlThemePadding}"/>
+            <muxc:Setter Property="ContextFlyout" Value="{muxc:StaticResource TextControlCommandBarContextFlyout}"/>
+            <muxc:Setter Property="SelectionFlyout" Value="{muxc:StaticResource TextControlCommandBarSelectionFlyout}"/>
+            <muxc:Setter Property="Template">
+                <muxc:Setter.Value>
+                    <muxc:ControlTemplate TargetType="muxc:PasswordBox">
+                        <muxc:Grid>
+                            <muxc:Grid.Resources>
+                                <muxc:Style x:Name="RevealButtonStyle" TargetType="muxc:ToggleButton">
+                                    <muxc:Setter Property="Template">
+                                        <muxc:Setter.Value>
+                                            <muxc:ControlTemplate TargetType="muxc:ToggleButton">
+                                                <muxc:Grid x:Name="ButtonLayoutGrid" Background="{muxc:ThemeResource TextControlButtonBackground}" BorderThickness="{muxc:TemplateBinding BorderThickness}" BorderBrush="{muxc:ThemeResource TextControlButtonBorderBrush}">
+                                                    <muxc:VisualStateManager.VisualStateGroups>
+                                                        <muxc:VisualStateGroup x:Name="CommonStates">
+                                                            <muxc:VisualState x:Name="Normal"/>
+                                                            <muxc:VisualState x:Name="Indeterminate"/>
+                                                            <muxc:VisualState x:Name="PointerOver">
+                                                                <muxc:Storyboard>
+                                                                    <muxc:ObjectAnimationUsingKeyFrames muxc:Storyboard.TargetName="ButtonLayoutGrid" muxc:Storyboard.TargetProperty="Background">
+                                                                        <muxc:DiscreteObjectKeyFrame KeyTime="0" Value="{muxc:ThemeResource TextControlButtonBackgroundPointerOver}"/>
+                                                                    </muxc:ObjectAnimationUsingKeyFrames>
+                                                                    <muxc:ObjectAnimationUsingKeyFrames muxc:Storyboard.TargetName="ButtonLayoutGrid" muxc:Storyboard.TargetProperty="BorderBrush">
+                                                                        <muxc:DiscreteObjectKeyFrame KeyTime="0" Value="{muxc:ThemeResource TextControlButtonBorderBrushPointerOver}"/>
+                                                                    </muxc:ObjectAnimationUsingKeyFrames>
+                                                                    <muxc:ObjectAnimationUsingKeyFrames muxc:Storyboard.TargetName="GlyphElement" muxc:Storyboard.TargetProperty="Foreground">
+                                                                        <muxc:DiscreteObjectKeyFrame KeyTime="0" Value="{muxc:ThemeResource TextControlButtonForegroundPointerOver}"/>
+                                                                    </muxc:ObjectAnimationUsingKeyFrames>
+                                                                </muxc:Storyboard>
+                                                            </muxc:VisualState>
+                                                            <muxc:VisualState x:Name="Pressed">
+                                                                <muxc:Storyboard>
+                                                                    <muxc:ObjectAnimationUsingKeyFrames muxc:Storyboard.TargetName="ButtonLayoutGrid" muxc:Storyboard.TargetProperty="Background">
+                                                                        <muxc:DiscreteObjectKeyFrame KeyTime="0" Value="{muxc:ThemeResource TextControlButtonBackgroundPressed}"/>
+                                                                    </muxc:ObjectAnimationUsingKeyFrames>
+                                                                    <muxc:ObjectAnimationUsingKeyFrames muxc:Storyboard.TargetName="ButtonLayoutGrid" muxc:Storyboard.TargetProperty="BorderBrush">
+                                                                        <muxc:DiscreteObjectKeyFrame KeyTime="0" Value="{muxc:ThemeResource TextControlButtonBorderBrushPressed}"/>
+                                                                    </muxc:ObjectAnimationUsingKeyFrames>
+                                                                    <muxc:ObjectAnimationUsingKeyFrames muxc:Storyboard.TargetName="GlyphElement" muxc:Storyboard.TargetProperty="Foreground">
+                                                                        <muxc:DiscreteObjectKeyFrame KeyTime="0" Value="{muxc:ThemeResource TextControlButtonForegroundPressed}"/>
+                                                                    </muxc:ObjectAnimationUsingKeyFrames>
+                                                                </muxc:Storyboard>
+                                                            </muxc:VisualState>
+                                                            <muxc:VisualState x:Name="CheckedPressed">
+                                                                <muxc:Storyboard>
+                                                                    <muxc:ObjectAnimationUsingKeyFrames muxc:Storyboard.TargetName="ButtonLayoutGrid" muxc:Storyboard.TargetProperty="Background">
+                                                                        <muxc:DiscreteObjectKeyFrame KeyTime="0" Value="{muxc:ThemeResource TextControlButtonBackgroundPressed}"/>
+                                                                    </muxc:ObjectAnimationUsingKeyFrames>
+                                                                    <muxc:ObjectAnimationUsingKeyFrames muxc:Storyboard.TargetName="ButtonLayoutGrid" muxc:Storyboard.TargetProperty="BorderBrush">
+                                                                        <muxc:DiscreteObjectKeyFrame KeyTime="0" Value="{muxc:ThemeResource TextControlButtonBorderBrushPressed}"/>
+                                                                    </muxc:ObjectAnimationUsingKeyFrames>
+                                                                    <muxc:ObjectAnimationUsingKeyFrames muxc:Storyboard.TargetName="GlyphElement" muxc:Storyboard.TargetProperty="Foreground">
+                                                                        <muxc:DiscreteObjectKeyFrame KeyTime="0" Value="{muxc:ThemeResource TextControlButtonForegroundPressed}"/>
+                                                                    </muxc:ObjectAnimationUsingKeyFrames>
+                                                                </muxc:Storyboard>
+                                                            </muxc:VisualState>
+                                                            <muxc:VisualState x:Name="IndeterminatePressed">
+                                                                <muxc:Storyboard>
+                                                                    <muxc:ObjectAnimationUsingKeyFrames muxc:Storyboard.TargetName="ButtonLayoutGrid" muxc:Storyboard.TargetProperty="Background">
+                                                                        <muxc:DiscreteObjectKeyFrame KeyTime="0" Value="{muxc:ThemeResource TextControlButtonBackgroundPressed}"/>
+                                                                    </muxc:ObjectAnimationUsingKeyFrames>
+                                                                    <muxc:ObjectAnimationUsingKeyFrames muxc:Storyboard.TargetName="ButtonLayoutGrid" muxc:Storyboard.TargetProperty="BorderBrush">
+                                                                        <muxc:DiscreteObjectKeyFrame KeyTime="0" Value="{muxc:ThemeResource TextControlButtonBorderBrushPressed}"/>
+                                                                    </muxc:ObjectAnimationUsingKeyFrames>
+                                                                    <muxc:ObjectAnimationUsingKeyFrames muxc:Storyboard.TargetName="GlyphElement" muxc:Storyboard.TargetProperty="Foreground">
+                                                                        <muxc:DiscreteObjectKeyFrame KeyTime="0" Value="{muxc:ThemeResource TextControlButtonForegroundPressed}"/>
+                                                                    </muxc:ObjectAnimationUsingKeyFrames>
+                                                                </muxc:Storyboard>
+                                                            </muxc:VisualState>
+                                                            <muxc:VisualState x:Name="Disabled">
+                                                                <muxc:Storyboard>
+                                                                    <muxc:DoubleAnimation Duration="0" muxc:Storyboard.TargetName="ButtonLayoutGrid" muxc:Storyboard.TargetProperty="Opacity" To="0"/>
+                                                                </muxc:Storyboard>
+                                                            </muxc:VisualState>
+                                                        </muxc:VisualStateGroup>
+                                                    </muxc:VisualStateManager.VisualStateGroups>
+                                                    <muxc:TextBlock x:Name="GlyphElement" muxc:AutomationProperties.AccessibilityView="Raw" FontStyle="Normal" FontFamily="{muxc:ThemeResource SymbolThemeFontFamily}" Foreground="{muxc:ThemeResource TextControlButtonForeground}" FontSize="12" HorizontalAlignment="Center" Text="&#xE052;" VerticalAlignment="Center"/>
+                                                </muxc:Grid>
+                                            </muxc:ControlTemplate>
+                                        </muxc:Setter.Value>
+                                    </muxc:Setter>
+                                </muxc:Style>
+                            </muxc:Grid.Resources>
+                            <muxc:Grid.ColumnDefinitions>
+                                <muxc:ColumnDefinition Width="*"/>
+                                <muxc:ColumnDefinition Width="Auto"/>
+                            </muxc:Grid.ColumnDefinitions>
+                            <muxc:Grid.RowDefinitions>
+                                <muxc:RowDefinition Height="Auto"/>
+                                <muxc:RowDefinition Height="*"/>
+                                <muxc:RowDefinition Height="Auto"/>
+                            </muxc:Grid.RowDefinitions>
+                            <muxc:VisualStateManager.VisualStateGroups>
+                                <muxc:VisualStateGroup x:Name="CommonStates">
+                                    <muxc:VisualState x:Name="Disabled">
+                                        <muxc:Storyboard>
+                                            <muxc:ObjectAnimationUsingKeyFrames muxc:Storyboard.TargetName="HeaderContentPresenter" muxc:Storyboard.TargetProperty="Foreground">
+                                                <muxc:DiscreteObjectKeyFrame KeyTime="0" Value="{muxc:ThemeResource TextControlHeaderForegroundDisabled}"/>
+                                            </muxc:ObjectAnimationUsingKeyFrames>
+                                            <muxc:ObjectAnimationUsingKeyFrames muxc:Storyboard.TargetName="BorderElement" muxc:Storyboard.TargetProperty="Background">
+                                                <muxc:DiscreteObjectKeyFrame KeyTime="0" Value="{muxc:ThemeResource TextControlBackgroundDisabled}"/>
+                                            </muxc:ObjectAnimationUsingKeyFrames>
+                                            <muxc:ObjectAnimationUsingKeyFrames muxc:Storyboard.TargetName="BorderElement" muxc:Storyboard.TargetProperty="BorderBrush">
+                                                <muxc:DiscreteObjectKeyFrame KeyTime="0" Value="{muxc:ThemeResource TextControlBorderBrushDisabled}"/>
+                                            </muxc:ObjectAnimationUsingKeyFrames>
+                                            <muxc:ObjectAnimationUsingKeyFrames muxc:Storyboard.TargetName="ContentElement" muxc:Storyboard.TargetProperty="Foreground">
+                                                <muxc:DiscreteObjectKeyFrame KeyTime="0" Value="{muxc:ThemeResource TextControlForegroundDisabled}"/>
+                                            </muxc:ObjectAnimationUsingKeyFrames>
+                                            <muxc:ObjectAnimationUsingKeyFrames muxc:Storyboard.TargetName="PlaceholderTextContentPresenter" muxc:Storyboard.TargetProperty="Foreground">
+                                                <muxc:DiscreteObjectKeyFrame KeyTime="0" Value="{muxc:ThemeResource TextControlPlaceholderForegroundDisabled}"/>
+                                            </muxc:ObjectAnimationUsingKeyFrames>
+                                        </muxc:Storyboard>
+                                    </muxc:VisualState>
+                                    <muxc:VisualState x:Name="Normal"/>
+                                    <muxc:VisualState x:Name="PointerOver">
+                                        <muxc:Storyboard>
+                                            <muxc:ObjectAnimationUsingKeyFrames muxc:Storyboard.TargetName="BorderElement" muxc:Storyboard.TargetProperty="BorderBrush">
+                                                <muxc:DiscreteObjectKeyFrame KeyTime="0" Value="{muxc:ThemeResource TextControlBorderBrushPointerOver}"/>
+                                            </muxc:ObjectAnimationUsingKeyFrames>
+                                            <muxc:ObjectAnimationUsingKeyFrames muxc:Storyboard.TargetName="BorderElement" muxc:Storyboard.TargetProperty="Background">
+                                                <muxc:DiscreteObjectKeyFrame KeyTime="0" Value="{muxc:ThemeResource TextControlBackgroundPointerOver}"/>
+                                            </muxc:ObjectAnimationUsingKeyFrames>
+                                            <muxc:ObjectAnimationUsingKeyFrames muxc:Storyboard.TargetName="PlaceholderTextContentPresenter" muxc:Storyboard.TargetProperty="Foreground">
+                                                <muxc:DiscreteObjectKeyFrame KeyTime="0" Value="{muxc:ThemeResource TextControlPlaceholderForegroundPointerOver}"/>
+                                            </muxc:ObjectAnimationUsingKeyFrames>
+                                            <muxc:ObjectAnimationUsingKeyFrames muxc:Storyboard.TargetName="ContentElement" muxc:Storyboard.TargetProperty="Foreground">
+                                                <muxc:DiscreteObjectKeyFrame KeyTime="0" Value="{muxc:ThemeResource TextControlForegroundPointerOver}"/>
+                                            </muxc:ObjectAnimationUsingKeyFrames>
+                                        </muxc:Storyboard>
+                                    </muxc:VisualState>
+                                    <muxc:VisualState x:Name="Focused">
+                                        <muxc:Storyboard>
+                                            <muxc:ObjectAnimationUsingKeyFrames muxc:Storyboard.TargetName="PlaceholderTextContentPresenter" muxc:Storyboard.TargetProperty="Foreground">
+                                                <muxc:DiscreteObjectKeyFrame KeyTime="0" Value="{muxc:ThemeResource TextControlPlaceholderForegroundFocused}"/>
+                                            </muxc:ObjectAnimationUsingKeyFrames>
+                                            <muxc:ObjectAnimationUsingKeyFrames muxc:Storyboard.TargetName="BorderElement" muxc:Storyboard.TargetProperty="Background">
+                                                <muxc:DiscreteObjectKeyFrame KeyTime="0" Value="{muxc:ThemeResource TextControlBackgroundFocused}"/>
+                                            </muxc:ObjectAnimationUsingKeyFrames>
+                                            <muxc:ObjectAnimationUsingKeyFrames muxc:Storyboard.TargetName="BorderElement" muxc:Storyboard.TargetProperty="BorderBrush">
+                                                <muxc:DiscreteObjectKeyFrame KeyTime="0" Value="{muxc:ThemeResource TextControlBorderBrushFocused}"/>
+                                            </muxc:ObjectAnimationUsingKeyFrames>
+                                            <muxc:ObjectAnimationUsingKeyFrames muxc:Storyboard.TargetName="ContentElement" muxc:Storyboard.TargetProperty="Foreground">
+                                                <muxc:DiscreteObjectKeyFrame KeyTime="0" Value="{muxc:ThemeResource TextControlForegroundFocused}"/>
+                                            </muxc:ObjectAnimationUsingKeyFrames>
+                                        </muxc:Storyboard>
+                                    </muxc:VisualState>
+                                </muxc:VisualStateGroup>
+                                <muxc:VisualStateGroup x:Name="ButtonStates">
+                                    <muxc:VisualState x:Name="ButtonVisible">
+                                        <muxc:Storyboard>
+                                            <muxc:ObjectAnimationUsingKeyFrames muxc:Storyboard.TargetName="RevealButton" muxc:Storyboard.TargetProperty="Visibility">
+                                                <muxc:DiscreteObjectKeyFrame KeyTime="0">
+                                                    <muxc:DiscreteObjectKeyFrame.Value>
+                                                        <muxc:Visibility>Visible</muxc:Visibility>
+                                                    </muxc:DiscreteObjectKeyFrame.Value>
+                                                </muxc:DiscreteObjectKeyFrame>
+                                            </muxc:ObjectAnimationUsingKeyFrames>
+                                        </muxc:Storyboard>
+                                    </muxc:VisualState>
+                                    <muxc:VisualState x:Name="ButtonCollapsed"/>
+                                </muxc:VisualStateGroup>
+                            </muxc:VisualStateManager.VisualStateGroups>
+                            <muxc:ContentPresenter x:Name="HeaderContentPresenter" ContentTemplate="{muxc:TemplateBinding HeaderTemplate}" Content="{muxc:TemplateBinding Header}" muxc:Grid.ColumnSpan="2" muxc:Grid.Column="0" FontWeight="Normal" Foreground="{muxc:ThemeResource TextControlHeaderForeground}" Margin="{muxc:ThemeResource PasswordBoxTopHeaderMargin}" muxc:Grid.Row="0" TextWrapping="Wrap" VerticalAlignment="Top" Visibility="Collapsed" x:DeferLoadStrategy="Lazy"/>
+                            <muxc:Border x:Name="BorderElement" Background="{muxc:TemplateBinding Background}" BorderThickness="{muxc:TemplateBinding BorderThickness}" BorderBrush="{muxc:TemplateBinding BorderBrush}" CornerRadius="{muxc:TemplateBinding CornerRadius}" muxc:Grid.ColumnSpan="2" muxc:Grid.Column="0" MinHeight="{muxc:ThemeResource TextControlThemeMinHeight}" MinWidth="{muxc:ThemeResource TextControlThemeMinWidth}" muxc:Grid.RowSpan="1" muxc:Grid.Row="1"/>
+                            <muxc:ScrollViewer x:Name="ContentElement" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" muxc:AutomationProperties.AccessibilityView="Raw" muxc:Grid.Column="0" HorizontalScrollBarVisibility="{muxc:TemplateBinding muxc:ScrollViewer.HorizontalScrollBarVisibility}" HorizontalScrollMode="{muxc:TemplateBinding muxc:ScrollViewer.HorizontalScrollMode}" IsHorizontalRailEnabled="{muxc:TemplateBinding muxc:ScrollViewer.IsHorizontalRailEnabled}" IsTabStop="False" IsVerticalRailEnabled="{muxc:TemplateBinding muxc:ScrollViewer.IsVerticalRailEnabled}" Padding="{muxc:TemplateBinding Padding}" muxc:Grid.Row="1" VerticalScrollMode="{muxc:TemplateBinding muxc:ScrollViewer.VerticalScrollMode}" VerticalScrollBarVisibility="{muxc:TemplateBinding muxc:ScrollViewer.VerticalScrollBarVisibility}" ZoomMode="Disabled"/>
+                            <muxc:TextBlock x:Name="PlaceholderTextContentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" muxc:Grid.ColumnSpan="2" muxc:Grid.Column="0" Foreground="{muxc:ThemeResource TextControlPlaceholderForeground}" IsHitTestVisible="False" Padding="{muxc:TemplateBinding Padding}" muxc:Grid.Row="1" Text="{muxc:TemplateBinding PlaceholderText}"/>
+                            <muxc:ToggleButton x:Name="RevealButton" BorderThickness="{muxc:TemplateBinding BorderThickness}" muxc:Grid.Column="1" FontSize="{muxc:TemplateBinding FontSize}" IsTabStop="False" MinWidth="34" Margin="{muxc:ThemeResource HelperButtonThemePadding}" muxc:Grid.Row="1" Style="{muxc:StaticResource RevealButtonStyle}" VerticalAlignment="Stretch" Visibility="Collapsed"/>
+                            <muxc:ContentPresenter x:Name="DescriptionPresenter" muxc:AutomationProperties.AccessibilityView="Raw" Content="{muxc:TemplateBinding Description}" muxc:Grid.ColumnSpan="2" muxc:Grid.Column="0" Foreground="{muxc:ThemeResource SystemControlDescriptionTextForegroundBrush}" muxc:Grid.Row="2" x:Load="False"/>
+                        </muxc:Grid>
+                    </muxc:ControlTemplate>
+                </muxc:Setter.Value>
+            </muxc:Setter>
+        </muxc:Style>
+    </Page.Resources>
     <Grid>
         <Grid.RowDefinitions>
             <RowDefinition Height="100"/>
@@ -35,7 +222,7 @@
         <TextBox x:Name="IP_In"  TextAlignment="Center" PlaceholderText="Enter your database IP!" muxc:Grid.Column="1" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center" muxc:Grid.Row="0" Width="456" TextChanged="IP_In_TextChanged"/>
         <TextBox x:Name="Port_In" TextAlignment="Center" PlaceholderText="Enter the port!" muxc:Grid.Column="1" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center" muxc:Grid.Row="1" Width="456" TextChanged="Port_In_TextChanged"/>
         <TextBox x:Name="User_In" TextAlignment="Center" PlaceholderText="Enter your database user!" muxc:Grid.Column="1" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center" muxc:Grid.Row="2" Width="456" TextChanged="User_In_TextChanged"/>
-        <PasswordBox x:Name="Password_In" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" PlaceholderText="Enter your password!" muxc:Grid.Column="1" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center" muxc:Grid.Row="3" Width="456" PasswordChanged="Password_In_PasswordChanged"/>
+        <PasswordBox Style="{StaticResource PasswordBoxStyle1}" x:Name="Password_In" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" PlaceholderText="Enter your password!" Grid.Column="1" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center" Grid.Row="3" Width="456" PasswordChanged="Password_In_PasswordChanged"/>
 
         <TextBox x:Name="ClientID_In" TextAlignment="Center" PlaceholderText="Enter your Twitch client ID" muxc:Grid.Column="1" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center" muxc:Grid.Row="4" Width="456" TextChanged="ClientID_In_TextChanged"/>
         <TextBox x:Name="Secret_In" TextAlignment="Center" PlaceholderText="Enter your Twitch secret" muxc:Grid.Column="1" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center" muxc:Grid.Row="5" Width="456" TextChanged="Secret_In_TextChanged"/>
diff --git a/Streamtitles/OptionsPage.xaml.cs b/Streamtitles/OptionsPage.xaml.cs
index 3da4646..2173f25 100644
--- a/Streamtitles/OptionsPage.xaml.cs
+++ b/Streamtitles/OptionsPage.xaml.cs
@@ -1,21 +1,8 @@
 ï»¿using System;
-using System.Collections.Generic;
 using System.ComponentModel;
-using System.Drawing;
-using System.IO;
-using System.Linq;
-using System.Runtime.InteropServices.WindowsRuntime;
 using System.Threading;
-using Windows.Foundation;
-using Windows.Foundation.Collections;
-using Windows.UI;
 using Windows.UI.Xaml;
 using Windows.UI.Xaml.Controls;
-using Windows.UI.Xaml.Controls.Primitives;
-using Windows.UI.Xaml.Data;
-using Windows.UI.Xaml.Input;
-using Windows.UI.Xaml.Media;
-using Windows.UI.Xaml.Navigation;
 
 // The Blank Page item template is documented at https://go.microsoft.com/fwlink/?LinkId=234238
 
@@ -30,30 +17,19 @@ namespace Streamtitles
         public OptionsPage()
         {
             this.InitializeComponent();
-            if(Data._ip != null)
+            Data.Load_Settings();
+            if(Data.Ip != null)
             {
                 IP_In.PlaceholderText = Data._ip;
             }
-            if (Data._port != null)
+            if (Data.Port != null)
             {
                 Port_In.PlaceholderText = Data._port;
             }
-            if (Data._user != null)
+            if (Data.User != null)
             {
                 User_In.PlaceholderText = Data._user;
             }
-            if (SecretData.ClientID != null)
-            {
-                ClientID_In.PlaceholderText = SecretData.ClientID;
-            }
-            if (SecretData.Secret != null)
-            {
-                Secret_In.PlaceholderText = SecretData.Secret;
-            }
-            if (SecretData.Token != null)
-            {
-                Token_In.PlaceholderText = SecretData.Token;
-            }
             if (Data.Channel != null)
             {
                 Channel_In.PlaceholderText = Data.Channel;
@@ -82,17 +58,17 @@ namespace Streamtitles
 
         private void ClientID_In_TextChanged(object sender, TextChangedEventArgs e)
         {
-            SecretData.ClientID = ClientID_In.Text;
+            Data.ClientID = ClientID_In.Text;
         }
 
         private void Secret_In_TextChanged(object sender, RoutedEventArgs e)
         {
-            SecretData.Secret = Secret_In.Text;
+            Data.Secret = Secret_In.Text;
         }
 
         private void Token_In_TextChanged(object sender, RoutedEventArgs e)
         {
-            SecretData.Token = Token_In.Text;
+            Data.Token = Token_In.Text;
         }
 
         private void Channel_In_TextChanged(object sender, RoutedEventArgs e)
@@ -103,6 +79,8 @@ namespace Streamtitles
         private void ApplyButton_Click(object sender, RoutedEventArgs e)
         {
             Data.Generate_ConnectionString();
+            Data.Save_Settings();
+
         }
         private void ConnectButton_Click(object sender, RoutedEventArgs e)
         {
diff --git a/Streamtitles/SecretData.cs b/Streamtitles/SecretData.cs
deleted file mode 100644
index 1e15d24..0000000
--- a/Streamtitles/SecretData.cs
+++ /dev/null
@@ -1,33 +0,0 @@
-ï»¿using System;
-using System.Collections.Generic;
-using System.Linq;
-using System.Text;
-using System.Threading.Tasks;
-
-namespace Streamtitles
-{
-    class SecretData
-    {
-        private static string _clientID = "gp762nuuoqcoxypju8c569th9wz7q5";
-        private static string _secret = "qkve74p00ruuhp6ojffpqmtou2ob5o";
-        private static string _token = "63yz4grwnuryz1f8se6l26lrhtvpdl";
-
-        public static string ClientID
-        {
-            get { return _clientID; }
-            set { _clientID = value; }
-        }
-
-        public static string Secret
-        {
-            get { return _secret; }
-            set { _secret = value; }
-        }
-
-        public static string Token
-        {
-            get { return _token; }
-            set { _token = value; }
-        }
-    }
-}
diff --git a/Streamtitles/Streamtitles.csproj b/Streamtitles/Streamtitles.csproj
index 330226c..6298355 100644
--- a/Streamtitles/Streamtitles.csproj
+++ b/Streamtitles/Streamtitles.csproj
@@ -127,6 +127,9 @@
       <DependentUpon>App.xaml</DependentUpon>
     </Compile>
     <Compile Include="Data.cs" />
+    <Compile Include="DataGridPage.xaml.cs">
+      <DependentUpon>DataGridPage.xaml</DependentUpon>
+    </Compile>
     <Compile Include="MainPage.xaml.cs">
       <DependentUpon>MainPage.xaml</DependentUpon>
     </Compile>
@@ -137,7 +140,9 @@
       <DependentUpon>OptionsPage.xaml</DependentUpon>
     </Compile>
     <Compile Include="Properties\AssemblyInfo.cs" />
-    <Compile Include="SecretData.cs" />
+    <Compile Include="SuggestPage.xaml.cs">
+      <DependentUpon>SuggestPage.xaml</DependentUpon>
+    </Compile>
   </ItemGroup>
   <ItemGroup>
     <AppxManifest Include="Package.appxmanifest">
@@ -161,6 +166,10 @@
       <Generator>MSBuild:Compile</Generator>
       <SubType>Designer</SubType>
     </ApplicationDefinition>
+    <Page Include="DataGridPage.xaml">
+      <SubType>Designer</SubType>
+      <Generator>MSBuild:Compile</Generator>
+    </Page>
     <Page Include="MainPage.xaml">
       <Generator>MSBuild:Compile</Generator>
       <SubType>Designer</SubType>
@@ -173,6 +182,10 @@
       <SubType>Designer</SubType>
       <Generator>MSBuild:Compile</Generator>
     </Page>
+    <Page Include="SuggestPage.xaml">
+      <SubType>Designer</SubType>
+      <Generator>MSBuild:Compile</Generator>
+    </Page>
   </ItemGroup>
   <ItemGroup>
     <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions">
@@ -184,6 +197,9 @@
     <PackageReference Include="Microsoft.Toolkit.Uwp.UI.Controls">
       <Version>7.0.2</Version>
     </PackageReference>
+    <PackageReference Include="Microsoft.Toolkit.Uwp.UI.Controls.DataGrid">
+      <Version>7.0.2</Version>
+    </PackageReference>
     <PackageReference Include="MySql.Data">
       <Version>8.0.26</Version>
     </PackageReference>
diff --git a/Streamtitles/SuggestPage.xaml b/Streamtitles/SuggestPage.xaml
new file mode 100644
index 0000000..32c4c0d
--- /dev/null
+++ b/Streamtitles/SuggestPage.xaml
@@ -0,0 +1,36 @@
+ï»¿<Page
+    x:Class="Streamtitles.SuggestPage"
+    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
+    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
+    xmlns:local="using:Streamtitles"
+    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
+    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:muxc="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
+    mc:Ignorable="d">
+    <Page.Background>
+        <ImageBrush ImageSource="/Assets/twitch.jpg" Stretch="Fill" Opacity="0.5"/>
+    </Page.Background>
+
+
+
+    <Grid>
+        <Grid.RowDefinitions>
+            <RowDefinition Height="250"/>
+            <RowDefinition Height="100"/>
+            <RowDefinition Height="100"/>
+            <RowDefinition Height="100"/>
+            <RowDefinition Height="100"/>
+        </Grid.RowDefinitions>
+        <Grid.ColumnDefinitions>
+            <ColumnDefinition Width="*"/>
+
+        </Grid.ColumnDefinitions>
+
+        <muxc:TextBlock HorizontalAlignment="Center" Text="Save your title!" TextWrapping="Wrap" VerticalAlignment="Center" FontFamily="Arial Black" FontSize="50" FontWeight="Bold" />
+
+        <muxc:TextBox x:Name="Title" muxc:Grid.Column="0" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" muxc:Grid.Row="1" PlaceholderText="Enter your title!" TextWrapping="Wrap" muxc:Grid.ColumnSpan="2" Width="591"/>
+        <muxc:TextBox x:Name="Genre"  muxc:Grid.Column="0" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" muxc:Grid.Row="2" PlaceholderText="Enter the genre!" TextWrapping="Wrap" muxc:Grid.ColumnSpan="2" Width="591"/>
+        <muxc:TextBox x:Name="Category" muxc:Grid.Column="0" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0" muxc:Grid.Row="3" PlaceholderText="Enter the category!" TextWrapping="Wrap" muxc:Grid.ColumnSpan="2" Width="591"/>
+
+        <muxc:Button x:Name="SaveButton" Content="Save" Margin="0,10,0,0" muxc:Grid.Row="4" HorizontalAlignment="Center" VerticalAlignment="Top" FontFamily="Arial Black" FontWeight="Bold" Click="SaveButton_Click"/>
+    </Grid>
+</Page>
diff --git a/Streamtitles/SuggestPage.xaml.cs b/Streamtitles/SuggestPage.xaml.cs
new file mode 100644
index 0000000..83bab09
--- /dev/null
+++ b/Streamtitles/SuggestPage.xaml.cs
@@ -0,0 +1,78 @@
+ï»¿using MySql.Data.MySqlClient;
+using System;
+using System.Collections.Generic;
+using System.Data.Common;
+using System.IO;
+using System.Linq;
+using System.Runtime.InteropServices.WindowsRuntime;
+using Windows.Foundation;
+using Windows.Foundation.Collections;
+using Windows.UI.Xaml;
+using Windows.UI.Xaml.Controls;
+using Windows.UI.Xaml.Controls.Primitives;
+using Windows.UI.Xaml.Data;
+using Windows.UI.Xaml.Input;
+using Windows.UI.Xaml.Media;
+using Windows.UI.Xaml.Navigation;
+
+// The Blank Page item template is documented at https://go.microsoft.com/fwlink/?LinkId=234238
+
+namespace Streamtitles
+{
+    /// <summary>
+    /// An empty page that can be used on its own or navigated to within a Frame.
+    /// </summary>
+    public sealed partial class SuggestPage : Page
+    {
+        private MySqlCommand addToDatabaseTitle;
+        private MySqlCommand getTitleID;
+        private MySqlCommand addToDatabaseGenre;
+        private MySqlCommand addToDatabaseCategory;
+
+        private int titleid;
+
+
+        public SuggestPage()
+        {
+            this.InitializeComponent();
+        }
+
+        private async void SaveButton_Click(object sender, RoutedEventArgs e)
+        {
+            if (Data.mysqlcon != null)
+            {
+                Data.mysqlcon.Open();
+                addToDatabaseTitle = new MySqlCommand("REPLACE INTO titles (title) VALUES (@title);", Data.mysqlcon);
+                addToDatabaseTitle.Parameters.AddWithValue("@title", Title.Text);
+                await addToDatabaseTitle.ExecuteNonQueryAsync();
+
+                getTitleID = new MySqlCommand("SELECT idtitle FROM titles WHERE title = @title", Data.mysqlcon);
+                getTitleID.Parameters.AddWithValue("@title", Title.Text);
+
+                using (DbDataReader res = await getTitleID.ExecuteReaderAsync())
+                {
+                    await res.ReadAsync();
+                    titleid = res.GetInt32(0);
+                }
+
+                addToDatabaseGenre = new MySqlCommand("INSERT INTO genres (idtitle, genre) VALUES(@titleid, @genre)", Data.mysqlcon);
+                addToDatabaseGenre.Parameters.AddWithValue("@genre", Genre.Text);
+                addToDatabaseGenre.Parameters.AddWithValue("@titleid", titleid);
+                addToDatabaseGenre.Prepare();
+                await addToDatabaseGenre.ExecuteNonQueryAsync();
+
+                addToDatabaseCategory = new MySqlCommand("INSERT INTO categories (idtitle, category) VALUES(@titleid, @category)", Data.mysqlcon);
+                addToDatabaseCategory.Parameters.AddWithValue("@titleid", titleid);
+                addToDatabaseCategory.Parameters.AddWithValue("@category", Category.Text);
+                addToDatabaseCategory.Prepare();
+                await addToDatabaseCategory.ExecuteNonQueryAsync();
+
+                Data.mysqlcon.Close();
+            }
+            else
+            {
+                Title.PlaceholderText = "No connection to database!";
+            }
+        }
+    }
+}
